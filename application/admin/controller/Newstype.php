<?php
    /**
     *  Encoding : UTF-8
     *  Separator : Unix and OS X (\n)
     *  File Name : Newstype.php
     *  Create Date : 2022/1/29 11:40
     *  Version : 0.1
     *  Copyright : skylong Project Team Copyright (C)
     *  license http://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh
     */
    namespace app\admin\controller;
    use app\common\controller\AdminController;
    use think\facade\Cookie;

    class Newstype extends AdminController {

        public function initialize() {
            parent::initialize(); // TODO: Change the autogenerated stub
        }

        public function index(){
            $where = [];
            if($this->request->isPost()){
                $admin_id = Cookie::get('id');
                if((int)cookie('group_id') !== config('rx.groupId')){
                    $where[] = ['admin_id','=',$admin_id];
                }
                $page = $this->request->post('page',$this->page);
                $limit = $this->request->post('limit',$this->limit);
                $start = ($page - 1)*$limit;
                $list = db('news_type')
                    ->where($where)
                    ->limit($start,$limit)
                    ->select();
                $total = db('news_type')
                    ->where($where)
                    ->count();
                return $this->returnTabelJson($list,'查询成功',$total);
            }
            return $this->fetch();
        }

        public function add(){
            if($this->request->isPost()){
                $params = $this->request->param();
                if(!isset($params['name']) || empty($params['name'])){
                    return $this->returnJson([],'分类名称不能为空',0);
                }
                $insert = [
                    'name' => $params['name'],
                    'admin_id' => Cookie::get('id'),
                    'create_time' => time(),
                    'update_time' => time(),
                    'sort' => isset($params['sort'])?$params['sort']:0
                ];
                $id = db('news_type')->insertGetId($insert);
                if($id > 0){
                    insert_admin_log('创建新闻分类');
                    return $this->returnJson(['id'=>$id],'创建成功',1);
                }
                return $this->returnJson([],'创建失败',0);
            }
            return $this->fetch('save');
    }

        public function edit(){
            $id = $this->request->param('id',0);
            if($this->request->isPost()){
                $params = $this->request->param();
                $update = [
                    'update_time' => time()
                ];
                if(isset($params['name'])){
                    if(empty($params['name'])){
                        return $this->returnJson([],'分类名称不能为空',0);
                    }
                    $update['name'] = $params['name'];
                }
                if(isset($params['state'])){
                    $update['state'] = $params['state'] ? 1 : 0;
                }
                if(isset($params['sort'])){
                    $update['sort'] = $params['sort'];
                }
                $res = db('news_type')->where("id = {$id}")->update($update);
                if($res !== false){
                    insert_admin_log('更新新闻分类');
                    return $this->returnJson(['id'=>$id],'操作成功',1);
                }
                return $this->returnJson([],'操作失败',0);
            }
            $info = db('news_type')->where("id = {$id}")->find();
            $info['url'] = '/'.trim(request()->module() . '/' . request()->controller() . '/' . request()->action());
            return $this->fetch('save',compact('info'));
        }

        public function del(){
            $id = $this->request->param('id',0);
            if(db('news')->where("news_type_id = {$id}")->count() > 0){
                return $this->returnJson([],'删除失败：该分类下已存在新闻信息');
            }
            $res = db('news_type')->where("id = {$id}")->delete();
            if($res !== false){
                insert_admin_log('删除新闻类型');
                return $this->returnJson([],'删除成功',1);
            }
            return $this->returnJson([],'删除失败');
        }
    }