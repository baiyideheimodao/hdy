<?php
/**
 *  Encoding : UTF-8
 *  Separator : Unix and OS X (\n)
 *  File Name : Task.php
 *  Create Date : 2022/1/4 9:24
 *  Version : 0.1
 *  Copyright : skylong Project Team Copyright (C)
 *  license http://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh
 */

namespace app\admin\controller;
use app\common\controller\AdminController;
use think\Db;
use think\Exception;
use \think\facade\Cookie;
use think\facade\Env;
use think\Log;

class Filemanage extends AdminController {

    public function initialize() {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index(){
        $where = [];
        if($this->request->isPost()){
            $page = $this->request->post('page',$this->page);
            $limit = $this->request->post('limit',$this->limit);
            $subject_id = $this->request->param('subject_id','');
            if(!empty($subject_id)){
                $where[] = ['t.subject_id','=',$subject_id];
            }
            $name = $this->request->param('name','');
            if(!empty($name)){
                $where[] = ['t.name','like',"%{$name}%"];
            }

            $list = db('filemanage')
                ->alias('t')
                ->join("admin a",'t.admin_id = a.id','left')
                ->join("subject su",'t.subject_id = su.id','left')
                ->field("t.*,FROM_UNIXTIME(t.create_time) create_time,su.name subject_name")
                // ->field("t.id,t.admin_id,t.type,t.name,t.state,a.name admin_name,FROM_UNIXTIME(t.create_time) create_time,FROM_UNIXTIME(t.done_time,'%Y-%m-%d') done_time")
                ->where($where)
                ->limit(($page-1)*$limit,$limit)
                ->order('t.id desc')
                ->select();

            $total = db('filemanage')
                ->alias('t')
                ->join("subject su",'t.subject_id = su.id','left')
                ->where($where)
                ->field("t.id")
                ->count();

            return $this->returnTabelJson($list,'查询成功',$total);
        }
        $subject = db('subject')->where("state = 1")->select();
        return $this->fetch('index',compact('subject'));
    }

    public function add(){
        $admin_id = cookie('id');
        if($this->request->isPost()){
            $data = $this->request->param();
            unset($data['id']);
            $data['admin_id'] = $admin_id;
            $data['update_time'] = time();
            $data['create_time'] = time();
            $res = db('filemanage')->insertGetId($data);
            if($res !== false){
                db()->commit();
                return $this->returnJson($data,'材料创建成功',1);
            }
            db()->rollback();
            return $this->returnJson([],'材料创建失败');

        }
        $subject = db('subject')->where("state = 1")->select();
        return $this->fetch('save',compact('subject'));
    }




    public function edit(){
        $id = $this->request->param('id',0);
        $info = db('filemanage t')
            ->field('t.*,su.name subject_name')
            ->join("subject su",'t.subject_id = su.id','left')
            ->where("t.id = {$id}")
            ->find();
        if($this->request->isPost()){
            $data = $this->request->param();
            // 判断当前材料是否已经下发
            // if(db('task_log')->where("task_id = {$id}")->count() > 0){
            if(db('filemanage_log')->alias('fi')->join('filemanage tal','tal.id = fi.filemanage_id')->where("fi.filemanage_id = {$id}")->count('fi.id') > 0){
                return $this->returnJson([],'不可修改，当前材料已下发');
            }
            unset($data['file']);
            $data['update_time'] = time();
            $res = db('filemanage')->where("id = {$id}")->update($data);
            if($res !== false){
                db()->commit();
                return $this->returnJson($data,'材料更新成功',1);
            }
            db()->rollback();
            return $this->returnJson([],'材料更新失败');
        }
        $info['url'] = '/admin/filemanage/edit';
        $subject = db('subject')->where("state = 1")->select();
        return $this->fetch('save',compact('info','subject'));
    }

    public function allot(){
        $file_id = $this->request->param('id','');
        $file_ids = $this->request->param('ids','');
        if($this->request->isPost()){
            $class_ids = $this->request->param('class_ids',[]);
            if(empty($class_ids)){
                return $this->returnJson([],'请勾选班组或群组');
            }else{
                $user_ids = db('user u')
                    ->field('u.id')
                    ->join("user_class_log us",'us.u_id = u.id','left')
                    ->whereIn('us.class_group_id',$class_ids)
                    ->select();

            }
            if(!empty($file_ids)){
                // 统一分配
                $file_ids_arr = array_filter(explode(',',$file_ids));
                $datas = [];
                foreach ($user_ids as $item){
                    foreach ($file_ids_arr as $ids){
                        if($this->checkIsAllot($item['id'],$ids)){
                            continue;
                        }
                        $datas[] = [
                            'filemanage_id' => $ids,
                            'u_id' => $item['id'],
                            'create_time' => time(),
                            'admin_id' => cookie('id'),
                            'collection' => 0
                        ];
                    }
                }

                db()->startTrans();
                try{
                    db('filemanage_log')->insertAll($datas);
                    db()->commit();
                    return $this->returnJson([],'材料分配成功',1);
                }catch (Exception $exception){
                    db()->rollback();
                    return $this->returnJson([],'材料分配失败');
                }
            }

            return $this->returnJson([],'22');
        }
        $class_group_id = [];

        $classes = db('class_group')->where("state = {$this->status['NORMAL']} and admin_id = ".\cookie('id'))->select();
        //return json($classes);
        $groups = db('group_group')->where("state = {$this->status['NORMAL']} and admin_id = ".\cookie('id'))->select();
        // 获取材料列表
        $file_lists = Db::name('task')->where("id in ({$file_ids})")->select();
        foreach ($file_lists as $k => $item){
            $file_lists[$k]['chose_time'] = date('Y-m-d', time());
        }
        $area['province'] = action('admin/school/addressList',['id'=>0,'type'=>1]);
        $area['city'] = [];
        $area['area'] = db('area')->where("p_id != 0 and state=1")->select();;
        $school = db('school')->where("state = 1")->select();
        $grade = db('grade')->where("state=1")->select();
        return $this->fetch('allot',compact('classes','groups','class_group_id','file_id','file_ids','area','school','grade'));
    }


    public function del(){
        $id = $this->request->param('id',0);
        if(db('filemanage_log')->alias('fi')->join('filemanage tal','tal.id = fi.filemanage_id')->where("fi.filemanage_id = {$id}")->count('fi.id') > 0){
            return $this->returnJson([],'不可修改，当前材料已下发');
        }
        $res = db('filemanage')->where("id = {$id}")->delete();
        $res = db('filemanage_log')->where("filemanage_id = {$id}")->delete();
        if($res !== false){
            insert_admin_log('材料删除成功');
            return $this->returnJson([],'删除成功',1);
        }
        return $this->returnJson([],'删除失败');
    }

    /**
     * 判断当前日期下当前材料是否已经分配当当前组
     * @param int $done_time
     * @param int $class_id
     * @param int $task_id
     * @return bool
     */
    private function checkIsAllot($u_id = 0,$filemanage_id = 0){

        return db('filemanage_log')->where("filemanage_id = {$filemanage_id} and u_id = {$u_id}")->count() > 0;
    }

    //上传图片
    public function upload()
    {
        $file = request()->file('file');
        // 移动到框架应用根目录/public/uploads/ 目录下
        if ($file) {
            $info = $file->move('upload/file');
            if ($info) {
                $result = [
                    'code' => 1, 'msg' => '上传成功', 'filename' => '/upload/file/' . str_replace('\\', '/', $info->getSaveName())];
                return json($result);
            } else {
                return false;
            }
        } else {
            return false;
        }
    }


}