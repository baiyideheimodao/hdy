<?php
    /**
     *  Encoding : UTF-8
     *  Separator : Unix and OS X (\n)
     *  File Name : Subjectversionmaker.php
     *  Create Date : 2021/12/31 9:49
     *  Version : 0.1
     *  Copyright : skylong Project Team Copyright (C)
     *  license http://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh
     */

    namespace app\admin\controller;
    use app\common\controller\AdminController;
    use \app\admin\model\Subject;

    class Subjectversionmaker extends AdminController {
        public function initialize() {
            parent::initialize(); // TODO: Change the autogenerated stub
        }

        public function index(){
            if($this->request->isPost()){
                $page = $this->request->post('page',$this->page);
                $limit = $this->request->post('limit',$this->limit);
                $list = db('subject_version_maker')
                    ->alias('sva')
                    ->join('subject_version sv','sva.version_id = sv.id and sv.state ='.$this->status['NORMAL'])
                    ->join('subject s','s.id = sva.subject_id and s.state ='.$this->status['NORMAL'])
                    ->field('sva.id,s.name subject_name,sv.name subject_version_name,sva.name,sv.state')
                    ->limit(($page-1)*$limit,$limit)
                    ->select();
                $total = db('subject_version_maker')
                    ->alias('sva')
                    ->join('subject_version sv','sva.version_id = sv.id and sv.state ='.$this->status['NORMAL'])
                    ->join('subject s','s.id = sva.subject_id and s.state ='.$this->status['NORMAL'])
                    ->field('sva.id,s.name subject_name,sv.name subject_version_name,sva.name,sv.state')
                    ->count();
                return $this->returnTabelJson($list,'查询成功',$total);
            }
            return $this->fetch();
        }

        public function add(){
            if($this->request->isPost()){
                $name = $this->request->post('name','');
                if(empty($name)){
                    return $this->returnJson([],'创建科目版本材料失败：材料名称不能为空');
                }
                $subject_version_id = $this->request->post('version_id',0);
                if(empty($subject_version_id)){
                    return $this->returnJson([],'创建科目版本材料失败：所属科目版本请选择');
                }
                $subject_id = db('subject_version')->where("id = {$subject_version_id}")->value('subject_id');
                $sort = $this->request->post('sort',0);
                $id = db('subject_version_maker')->insertGetId([
                                                             'name' => $name,
                                                             'sort' => $sort,
                                                             'subject_id' => $subject_id,
                                                             'version_id' => $subject_version_id,
                                                             'admin_id' => cookie('id'),
                                                             'create_time' => time()
                                                         ]);
                if($id > 0){
                    insert_admin_log('创建科目版本材料成功');
                    return $this->returnJson(['id'=>$id],'创建科目版本材料成功',1);
                }
                return $this->returnJson([],'创建科目版本材料失败');
            }
            $subjects = (new Subject())->getChildList();
            return $this->fetch('save',compact('subjects'));
        }

        public function edit(){
            $id = $this->request->param('id',0);
            if($this->request->isPost()){
                $data = $this->request->param();
                $update = [];
                if(isset($data['name'])){
                    if(!empty($data['name'])){
                        $update['name'] = $data['name'];
                    }else{
                        return $this->returnJson([],'更新科目版本材料失败：材料名称不能为空');
                    }
                }
                if(isset($data['version_id'])){
                    if(!empty($data['version_id'])){
                        $update['version_id'] = $data['version_id'];
                    }else{
                        return $this->returnJson([],'更新科目版本材料失败：所属科目版本请选择');
                    }
                }
                $sort = $this->request->post('sort','sss');
                if($sort !== 'sss'){
                    $update['sort'] = $sort;
                }
                $state = $this->request->post('state',-999);
                if($state !== -999){
                    $update['state'] = $state;
                }
                $res = db('subject_version_maker')->where("id = {$id}")->update($update);
                if($res !== false){
                    insert_admin_log('更新科目版本材料成功');
                    return $this->returnJson(['id'=>$id],'更新科目版本材料成功',1);
                }
                return $this->returnJson([],'更新科目版本材料失败');
            }
            $info = db('subject_version_maker')->where("id = {$id}")->find();
            $subjects = (new Subject())->getChildList();
            $info['url'] = '/admin/subjectversionmaker/edit';
            return $this->fetch('save',compact('info','subjects'));
        }

        public function del(){
            $id = $this->request->param('id',0);
            if(db('subject_version_maker')->where("version_id = {$id}")->count() > 0){
                return $this->returnJson([],'删除科目版本材料失败：该科目版本材料下存在其他类目');
            }
            $res = db('subject_version_maker')->where("id = {$id}")->delete();
            if($res !== false){
                insert_admin_log('删除科目版本材料成功');
                return $this->returnJson([],'删除科目版本材料成功',1);
            }
            return $this->returnJson([],'删除科目版本材料失败');
        }
    }