<?php
    /**
     *  Encoding : UTF-8
     *  Separator : Unix and OS X (\n)
     *  File Name : Admin.php
     *  Create Date : 2022/1/1 16:41
     *  Version : 0.1
     *  Copyright : skylong Project Team Copyright (C)
     *  license http://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh
     */
    namespace app\admin\controller;
    use app\common\controller\AdminController;
    use think\Db;

    class Admin extends AdminController {
        public function initialize() {
            parent::initialize(); // TODO: Change the autogenerated stub
        }

        public function index()
        {
            if($this->request->isPost()){
                $page = $this->request->post('page',$this->page);
                $limit = $this->request->post('limit',$this->limit);
                $where = [];
                $where[] = ['a.admin_id','=',cookie('id')];
                $list = db('admin')
                    ->alias('a')
                    ->join('auth_group b','b.id=a.group_id')
                    ->join('area ae','a.area_id = ae.id','left')
                    ->field("a.id,a.username,a.password,a.name,a.group_id,a.phone,a.email,b.name as qxName,a.area_id,ifnull(ae.name,'') area_name")
                    ->where($where)
                    ->limit(($page-1)*$limit,$limit)
                    ->select();
                $total = db('admin')
                    ->alias('a')
                    ->join('auth_group b','b.id=a.group_id')
                    ->where($where)
                    ->count();
                return $this->returnTabelJson($list,'查询成功',$total);
            }
            return $this->fetch();
        }

        public function add()
        {
            $template['title'] = '管理员添加'; // 标题
            $template['location'] = '/admin/user'; //主页地址
            $template['name'] = 'user'; //主页地址
            $this->assign('location', $template);
            if($this->request->isPost()){
                $data = $this->request->post();
                $group_id = $data['group_id'];
                if(intval($group_id) <= 0){
                    return json(['code'=>0,'message'=>'请选择分组']);
                }
                // todo::2021-12-21判断管理员名称是否存在
                $info = db('admin')->where("username = '{$data['username']}'")->whereOr("phone = '{$data['phone']}'")->find();
                if(!empty($info)){
                    return json(['code'=>0,'message'=>'添加失败：管理员【姓名】或【手机号】已存在']);
                }

                $data['password'] = md5($data['password']);
                $data['admin_id'] = cookie('id');
                $result = db('admin')->insertGetId($data);
                if($result !== false){
                    insert_admin_log('管理员添加成功');
                    return json(['code'=>200,'message'=>'管理员添加成功']);
                }
                return json(['code'=>0,'message'=>'管理员添加失败']);
            }
            $roles = db('auth_group')->where('type', '=', '1')->where('admin_id',cookie('id'))->where('id','<>',config('rx.groupId'))->select();
            $areas = db('area')->select();
            $where = [];
            $where['state'] = 1;
            $where['area_id'] = cookie('area_id');
            if(cookie('school_id') > 0){
                $where['id'] = cookie('school_id');
            }
            $schools = db('school')->where($where)->select();
            $this->assign('areas', $areas);
            $this->assign('roles', $roles);
            $this->assign('schools', $schools);
            return $this->fetch();
        }

        public function edit($id)
        {
            $template['title'] = '管理员修改'; // 标题
            $template['location'] = '/admin/user'; //主页地址
            $template['name'] = 'user'; //主页地址
            if ($this->request->isPost()) {
                $data = $this->request->post();
                // todo::2021-12-21判断管理员名称是否存在
                $info = db('admin')->where("id != {$data['id']} and (username = '{$data['username']}' or phone = '{$data['phone']}')")->find();
                if(!empty($info)){
                    return json(['code'=>0,'message'=>'添加失败：管理员【姓名】或【手机号】已存在']);
                }
                $result = Db::name('admin')
                            ->where('id', $data['id'])
                            ->data($data)
                            ->update();
                if($result !== false){
                    insert_admin_log('管理员修改成功');
                    return json(['code'=>200,'message'=>'管理员修改成功']);
                }
                return json(['code'=>0,'message'=>'管理员修改失败']);
            }
            $this->assign('location', $template);
            $data = db('admin')->alias('a')->where('a.id', $id)->field('a.*')->find();
            $roles = db('auth_group')->where('type', '=', '1')->select();
            $areas = db('area')->select();
            $where = [];
            $where['state'] = 1;
            $where['area_id'] = cookie('area_id');
            if(cookie('school_id') > 0){
                $where['id'] = cookie('school_id');
            }
            $schools = db('school')->where($where)->select();
            $this->assign('areas', $areas);
            $this->assign('data', $data);
            $this->assign('roles', $roles);
            $this->assign('schools', $schools);
            return $this->fetch();
        }

        public function del()
        {
            $params = request()->param();
            if (!isset($params['id'])) {
                return showData(0, 'ID不存在');
            }
            $res = db('admin')->where("id in ({$params['id']})")->delete();
            if($res !== false){
                insert_admin_log('删除了用户');
                return showData(200, '操作成功');
            }
            return showData(0, '操作失败');
        }

        //重置密码
        public function chongzhi($id)
        {
            $dataa = [
                'password' => 'e10adc3949ba59abbe56e057f20f883e'
            ];
            $data = ($this->request->param());
            $biao = $data['biao'];
            $result = db($biao)
                        ->where('id', $id)
                        ->data($dataa)
                        ->update();
            return json($result);
        }

        public function sch_admin()
        {
            if($this->request->isPost()){
                $page = $this->request->post('page',$this->page);
                $limit = $this->request->post('limit',$this->limit);
                $where = [];
                $where[] = ['a.group_id','=',3];
                $list = db('admin')
                    ->alias('a')
                    ->join('auth_group b','b.id=a.group_id')
                    ->join('area ae','a.area_id = ae.id','left')
                    ->join('school sch','sch.id = a.school_id','left')
                    ->field("a.id,sch.name sch_name,a.username,a.password,a.name,a.group_id,a.phone,a.email,b.name as qxName,a.area_id,ifnull(ae.name,'') area_name")
                    ->where($where)
                    ->limit(($page-1)*$limit,$limit)
                    ->select();
                $total = db('admin')
                    ->alias('a')
                    ->join('auth_group b','b.id=a.group_id')
                    ->where($where)
                    ->count();
                return $this->returnTabelJson($list,'查询成功',$total);
            }
            return $this->fetch('sch_admin');
        }

        public function sch_del()
        {
            $params = request()->param();
            if (!isset($params['id'])) {
                return showData(0, 'ID不存在');
            }
            $res = db('admin')->where("id in ({$params['id']})")->delete();
            if($res !== false){
                insert_admin_log('删除了用户');
                return showData(200, '操作成功');
            }
            return showData(0, '操作失败');
        }

        public function sch_edit($id)
        {
            if ($this->request->isPost()) {
                $data = $this->request->post();
                unset($data['school_name']);


                    // todo::2021-12-21判断管理员名称是否存在
//                $info = db('admin')->where("id != {$data['id']} and (username = '{$data['username']}' or phone = '{$data['phone']}')")->find();
//                if(!empty($info)){
//                    return json(['code'=>0,'message'=>'添加失败：管理员【姓名】或【手机号】已存在']);
//                }
                $result = Db::name('admin')
                    ->where('id', $data['id'])
                    ->data($data)
                    ->update();
                if($result !== false){
                    insert_admin_log('校级管理员修改成功');
                    return json(['code'=>200,'message'=>'校级管理员修改成功']);
                }
                return json(['code'=>0,'message'=>'校级管理员修改失败']);
            }
            $data = db('admin')
                ->alias('a')
                ->join('school sch','sch.id = a.school_id')
                ->where('a.id', $id)
                ->field('a.*,sch.name school_name,sch.id school_id')
                ->find();
            $roles = db('auth_group')->where('type', '=', '1')->select();
            $areas = db('area')->select();
            $where = [];
            $where['state'] = 1;
            $where['area_id'] = cookie('area_id');
            if(cookie('school_id') > 0){
                $where['id'] = cookie('school_id');
            }
            $schools = db('school')->where($where)->select();
            $this->assign('areas', $areas);
            $this->assign('info', $data);
            $this->assign('roles', $roles);
            $this->assign('schools', $schools);
            $this->assign('url', '/admin/admin/sch_edit');
            return $this->fetch('sch_save');
        }

        public function sch_add()
        {

            if($this->request->isPost()){
                $data = $this->request->post();
                $data['password'] = md5($data['password']);
                $data['admin_id'] = cookie('id');
                unset($data['school_name']);
                $result = db('admin')->insertGetId($data);
                if($result !== false){
                    insert_admin_log('管理员添加成功');
                    return json(['code'=>200,'message'=>'校级管理员添加成功']);
                }
                return json(['code'=>0,'message'=>'校级管理员添加失败']);
            }
            $roles = db('auth_group')->where('type', '=', '1')->where('admin_id',cookie('id'))->where('id','<>',config('rx.groupId'))->select();
            $areas = db('area')->select();
            $where = [];
            $where['state'] = 1;
            $where['area_id'] = cookie('area_id');
            if(cookie('school_id') > 0){
                $where['id'] = cookie('school_id');
            }
            $schools = db('school')->where($where)->select();
            $this->assign('areas', $areas);
            $this->assign('roles', $roles);
            $this->assign('schools', $schools);
            $this->assign('url', '/admin/admin/sch_add');
            return $this->fetch('sch_save');
        }

    }