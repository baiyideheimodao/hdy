<?php
/**
 *  Encoding : UTF-8
 *  Separator : Unix and OS X (\n)
 *  File Name : Index.php
 *  Create Date : 2021/12/6 15:28
 *  Version : 0.1
 *  Copyright : test-master Project Team Copyright (C)
 *  license http://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh
 */
namespace app\api\controller;
use app\common\controller\WeChatFactory;
use app\common\model\User;





class Index extends WeChatFactory {

    private $webUrl = '';

    public function initialize() {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->webUrl = config('sys_data.web_site');
    }

    // 登录
    public function login(){
        $params = $this->request->param();
        $iv = $this->request->param('iv','');
        $openid = $this->request->param('openid','');
        $sessionKey = $this->request->param('sessionKey','');
        $encrptedDate = $this->request->param('encryptedData','');

        if(empty($openid)){
            $retJson = $this->min_login();
            if($retJson['code'] !== 1){
                return json($retJson);
            }
            $openid = $retJson['data']['openid'];
            $sessionKey = $retJson['data']['session_key'];
        }
        if(empty($iv) || empty($openid) || empty($sessionKey) || empty($encrptedDate)){
            return $this->returnJson([],'缺少必要参数');
        }
        $result = $this->min_app->encryptor->decryptData($sessionKey,$iv,$encrptedDate);
        $user = User::get(['openid' => $openid]);
        if(!empty($user)){
            if($user->state != $this->status['NORMAL']){
                return $this->returnJson([],'当前用户已被禁用');
            }
            $user->nickname = base64_decode(base64_encode($result['nickName']));
            $user->avatar = $result['avatarUrl'];
            $u_id = $user->id;
            $user->save();
        }else{
            $area_id = isset($params['area_id'])?$params['area_id']:0;
            $p_id = isset($params['p_id'])?$params['p_id']:0;
            $inserts = [
                'area_id' => $area_id,
                'openid' => $openid,
                'nickname' => base64_decode(base64_encode($result['nickName'])),
                'avatar' => $result['avatarUrl'],
                'sex' => $result['gender'],
                'create_time' => time(),
                'join_ip' => request()->ip(),
                'login_time' => time(),
                'login_ip' => request()->ip()
            ];
            $u_id = (new User())->insertGetId($inserts);
            if(!empty($p_id)){
                // 推荐id不为空时，处理
                $this->dealUserPids($p_id);
            }
        }
        $info = User::get(['id'=>$u_id]);
        return $this->returnJson(['info'=>$info],'授权登录成功',1);
    }

    // 基础配置
    public function configs(){
        $class_id = $this->request->param('class_id',0);
        $type = $this->request->param('type',0);
        $code = $this->request->param('code');
        $formName = 'class_group';
        $userData = [];
        if(@$code){
            $appid = 'wx32d11f1898c690d6';
            $secret = 'f0f5285f163324b11d3b2c0cb09ff8ac';
            $url = "https://api.weixin.qq.com/sns/jscode2session?appid=".$appid."&secret=".$secret."&js_code=".$code."";
            $res = $this->http_curl($url);
            $getOpenid = $res['openid'];
            $u_class_id = db('user u')
                ->join('user_class_log ucl','ucl.u_id = u.id')
                ->where('u.openid',$getOpenid)
                ->value('ucl.class_group_id');
            $userData['u_class_id'] = $u_class_id;
            $userData['u_t_class_id'] = db('teacher')
                ->where('openid',$getOpenid)
                ->where('type',1)
                ->value('class_id');
            $userData['u_base_id'] = db('teacher')
                ->where('openid',$getOpenid)
                ->where('type',2)
                ->value('base_id');
            $userData['openid'] = $getOpenid;
            if($type==2){
                $formName = 'base';
            }
        }
        if($type==2){
            $formName = 'base';
        }
        $class_name = db($formName)->where("id = {$class_id}")->value('name');
        $areas = db('area')->where("state = {$this->status['NORMAL']}")->select();
        array_unshift($areas,['id'=>0,'name'=>'请选择所在地区']);
        $grades = db('grade')->where("state = {$this->status['NORMAL']}")->select();
        array_unshift($grades,['id'=>0,'name'=>'请选择所在年级']);
        $menus = [];
        return $this->returnJson(compact('areas','menus','userData','grades','class_name'),'获取成功',1);
    }

    // 获取主页信息
    public function home(){
        $area_id = $this->request->param('area_id',0);
        $bannersList = db('banner')
            ->where("state = {$this->status['NORMAL']} and area_id = {$area_id}")
            ->limit(6)
            ->order('sort')->select();
        $len = count($bannersList);
        if($len!=6){
            $len = 6 - $len;
            $bannersList = db('banner')
                ->where("state = {$this->status['NORMAL']} and area_id = 0")
                ->limit($len)
                ->order('sort')
                ->select();
        }
        // 广告图
        $banners = [];
        foreach ($bannersList as $item){
            if(!isset($banners[$item['type']])){
                $banners[$item['type']] = [];
            }
            $banners[$item['type']][] = $item;
        }
        // 咨询
        $news = db('news')
            ->alias('n')
            ->join("news_type nt","n.news_type_id = nt.id")
            ->where("n.area_ids like '%,{$area_id},%' or n.show_all = 1 and n.state = {$this->status['NORMAL']}")
            ->field("n.id,n.title,concat('{$this->webUrl}',n.image) image,n.description,n.content,nt.name type_name")
            ->order("n.is_top desc,n.show_all desc,n.create_time desc,n.sort desc")
            ->limit(4)
            ->select();
        // 商品
        $goods = [];
        // 视频
        $videos = db('video')
            ->alias('n')
            ->where("n.area_ids like '%,{$area_id},%' or n.show_all = 1 and n.state = {$this->status['NORMAL']}")
            ->field("n.id,n.title,n.desc,n.image,n.video_url")
            ->order("n.is_top desc,n.show_all desc,n.create_time desc,n.sort desc")
            ->limit(4)
            ->select();
        // $videos = db('video')->where("state = {$this->status['NORMAL']} and (area_id = {$area_id} or area_id = 0)")->limit(4)->select();
        return $this->returnJson(compact('banners','news','goods','videos'),'获取成功',1);
    }

    // 咨询列表
    public function newsList(){
        $area_id = $this->request->param('area_id',0);
        $page = $this->request->param('page',0);
        $limit = config('paginate.list_rows');
        $limit = $this->request->param('pagenum',$limit);
        if($area_id==0){
            $where = "n.show_all = 1 and n.state = {$this->status['NORMAL']}";
        }else{
            $where = "n.area_ids like '%,{$area_id},%' and n.state = {$this->status['NORMAL']}";
        }
        $list = db('news')
            ->alias('n')
            ->join("news_type nt","n.news_type_id = nt.id")
            ->where($where)
            ->field("n.id,n.title,n.image,n.content,nt.name type_name,FROM_UNIXTIME(n.create_time) create_time")
            ->order("n.is_top desc,n.create_time desc,n.sort desc")
            ->limit($page*$limit,$limit)
            ->select();
        foreach ($list as $k =>$val){
            $list[$k]['content'] = mb_substr(strip_tags($val['content']),0,45,'utf-8');
            $list[$k]['image'] = config('sys_data.web_site').$list[$k]['image'];
        }
        $total = db('news')
            ->alias('n')
            ->join("news_type nt","n.news_type_id = nt.id")
            ->where($where)
            ->count();
        return $this->returnJson(compact('list','total','page'),'获取成功',1);
    }

    // 咨询详情
    public function newsInfo(){
        $id = $this->request->param('id',0);
        $content = "";
        if(!empty($id)){
            $content = db('news n')
                ->where("n.id = {$id}")
                ->field('a.name author_name,n.content,n.title,n.image,FROM_UNIXTIME(n.create_time) create_time,nt.name type_name')
                ->join("news_type nt","n.news_type_id = nt.id")
                ->join("admin a","n.admin_id = a.id")
                ->find();
            $content['content'] = str_replace('/upload/',config('sys_data.web_site')."/upload/",$content['content']);
        }
        return $this->returnJson($content,'获取成功',1);
    }

    // 消息通知详情
    public function messageInfo(){
        $id = $this->request->param('id',0);
        $content = "";
        if(!empty($id)){
            $content = db('message n')
                ->where("n.id = {$id}")
                ->field('n.content,n.body,FROM_UNIXTIME(n.create_time) create_time')
                ->find();
            $content['content'] = str_replace('/upload/',config('sys_data.web_site')."/upload/",$content['content']);
        }
        return $this->returnJson($content,'获取成功',1);
    }

    // 视频列表
    public function videosList(){
        $area_id = $this->request->param('area_id',0);
        $page = $this->request->param('page',0);
        $limit = config('paginate.list_rows');
        $limit = $this->request->param('pagenum',$limit);
        if($area_id==0){
            $where = "n.state = {$this->status['NORMAL']}";
        }else{
            $where = "n.area_ids like '%,{$area_id},%' and n.state = {$this->status['NORMAL']}";
        }
        $list = db('video')
            ->alias('n')
            ->where($where)
            ->field("n.id,n.title,n.image,n.desc,FROM_UNIXTIME(n.create_time) create_time")
            ->order("n.create_time desc,n.sort desc")
            ->limit($page*$limit,$limit)
            ->select();
        foreach ($list as $k =>$val){
            $list[$k]['content'] = mb_substr(strip_tags($val['desc']),0,45,'utf-8');
            $list[$k]['image'] = config('sys_data.web_site').$list[$k]['image'];
        }
        $total = db('video')
            ->alias('n')
            ->where($where)
            ->count();
        return $this->returnJson(compact('list','total','page'),'获取成功',1);
    }

    // 咨询详情
    public function videosInfo(){
        $id = $this->request->param('id',0);
        $content = "";
        if(!empty($id)){
            $content = db('video n')
                ->where("n.id = {$id}")
                ->field('a.name author_name,n.title,n.image,n.desc,n.video_url,FROM_UNIXTIME(n.create_time) create_time')
                ->join("admin a","n.admin_id = a.id")
                ->find();
        }
        return $this->returnJson($content,'获取成功',1);
    }



    // 获取身份列表
    public function userIdentity(){
        $openid = $this->request->param('openid','');
        $userInfo = db('user')
            ->alias('u')
            ->join('user_class_log ucl','u.id = ucl.u_id','left')
            ->join('class_group cg','cg.id = ucl.class_group_id','left')
            ->join('school s','cg.school_id = s.id','left')
            ->join('grade g','cg.grade_id = g.id','left')
            ->where('u.openid',$openid)
            ->field('CONCAT_WS("_",u.id,0) id,u.`name`,u.avatar,ifnull(s.`name`,"") school_name,ifnull(cg.`name`,"") class_name,ifnull(g.`name`,"") grade_name,u.phone,"" base_name,0 type')
            ->select();
        $teachers = db('teacher')
            ->alias('t')
            ->join('class_group cg','cg.id = t.class_id','left')
            ->join('school s','t.school_id = s.id','left')
            ->join('base b','t.base_id = b.id','left')
            ->where('t.openid',$openid)
            ->where('t.status',1)
            ->field('CONCAT_WS("_",t.id,t.type) id,t.username as `name`,t.id teacher_id,t.avatar,ifnull(s.`name`,"") school_name,ifnull(cg.`name`,"") class_name,"" grade_name,ifnull(b.`name`,"") base_name,t.phone,t.type')
            ->select();
        $list = [];
        printLog([
            'teachers'=>$teachers,
            'userInfo'=>$userInfo,
        ]);
       
        if(!empty($userInfo)){
            if($userInfo[0]['school_name']||$userInfo[0]['class_name']||$userInfo[0]['base_name']){
                $list = $userInfo;
            }
        }
        $list = array_merge($list,$teachers);
        return $this->returnJson(compact('list'),'获取成功',1);
    }

}