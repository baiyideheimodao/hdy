<?php
    /**
     *  Encoding : UTF-8
     *  Separator : Unix and OS X (\n)
     *  File Name : Menu.php
     *  Create Date : 2022/6/15 20:24
     *  Version : 0.1
     *  Copyright : skylong Project Team Copyright (C)
     *  license http://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh
     */
    namespace app\index\controller;
    class Menu extends BaseController {
        public function initialize() {
            parent::initialize(); // TODO: Change the autogenerated stub
        }

        public function updateMenuById() {
            $params = $this->request->param();
            if (!isset($params['id'])) {
                return $this->returnJson([], '无效ID');
            }
            $id   = $params['id'];
            $data = [];
            if (isset($params['target'])) {
                $data['target'] = $params['target'];
            }
            if (isset($params['title'])) {
                $data['name'] = $params['title'];
            }
            if (isset($params['order'])) {
                $data['sort_order'] = $params['order'];
            }
            if (isset($params['path'])) {
                $data['vue_path'] = $params['path'];
            }
            if (isset($params['type'])) {
                $data['type'] = $params['type'] == 1 ? 'nav' : 'auth';
            }
            $res = db('auth_rule')->where("id = {$id}")->update($data);
            if ($res !== false) {
                return $this->returnJson([], '操作成功', 200);
            }
            return $this->returnJson([], '无效操作');
        }

        private function dealMenu($data = [],$pId = 0) {
            if (isset($data['id'])) {
                db('auth_rule')->where("id = {$data['id']}")->update([
                                                                                'status'     => $data['enabled']?1:0,
                                                                                'name'     => $data['title'],
                                                                                'vue_code' => $data['code']
                                                                            ]
                    );
                return $data['id'];
            }
            return db('auth_rule')->insertGetId([
                                                    'status'     => $data['enabled']?1:0,
                                                    'name'     => $data['title'],
                                                    'pid'     => $pId,
                                                    'type'     => 'auth',
                                                    'vue_code' => $data['code']
                                                ]
                );
        }

        /**
         * 剔除已删除的菜单
         * @param array $ids
         * @param int   $pId
         * @return int
         */
        private function removeDelRules($ids = [],$pId = 0){
            if($pId == 0){
                return true;
            }
            return db('auth_rule')->where("pid = {$pId}")->whereNotIn("id",$ids)->delete();
        }

        public function updateSubActions() {
            $params = $this->request->param();
            if (!isset($params['parentId'])) {
                return $this->returnJson([], '无效操作');
            }
            $parentId = $params['parentId'];
            $actions = $params['actions'];
            $ids = [];
            foreach ($actions as $item) {
                $ids[] = $this->dealMenu($item,$parentId);
            }
            // 剔除已删除的菜单
            $this->removeDelRules($ids,$parentId);
            return $this->returnJson([], '操作成功', 200);
        }

        public function deleteMenu($id = 0){
            db('auth_rule')->where("id = {$id}")->delete();
            return $this->returnJson([], '操作成功', 200);
        }

        public function addMenu() {
            $params = $this->request->param();
            $data = [
                'status'     => $params['enabled']?1:0,
                'name'     => $params['title'],
                'pid'     => isset($params['parentId'])?$params['parentId']:0,
                'sort_order'     => isset($params['order'])?$params['order']:0,
                'type'     => $params['type'] == 1 ? 'nav':'auth',
            ];
            db('auth_rule')->insertGetId($data);
            return $this->returnJson([], '操作成功', 200);
        }
    }